{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "groot"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "ACLXRAYVNET"
    },
    "currentPublicIP": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Lab@XRay#11"
    },
    "shutDownTime": {
      "type": "string",
      "defaultValue": "23:00"
    },
    "shutdownTimeZone": {
      "type": "string",
      "allowedValues": [
        "Dateline Standard Time",
        "UTC-11",
        "Hawaiian Standard Time",
        "Alaskan Standard Time",
        "Pacific Standard Time (Mexico)",
        "Pacific Standard Time",
        "US Mountain Standard Time",
        "Mountain Standard Time (Mexico)",
        "Mountain Standard Time",
        "Central America Standard Time",
        "Central Standard Time",
        "Central Standard Time (Mexico)",
        "Canada Central Standard Time",
        "SA Pacific Standard Time",
        "Eastern Standard Time (Mexico)",
        "Eastern Standard Time",
        "US Eastern Standard Time",
        "Venezuela Standard Time",
        "Paraguay Standard Time",
        "Atlantic Standard Time",
        "Central Brazilian Standard Time",
        "SA Western Standard Time",
        "Newfoundland Standard Time",
        "E. South America Standard Time",
        "SA Eastern Standard Time",
        "Argentina Standard Time",
        "Greenland Standard Time",
        "Montevideo Standard Time",
        "Bahia Standard Time",
        "Pacific SA Standard Time",
        "UTC-02",
        "Azores Standard Time",
        "Cape Verde Standard Time",
        "Morocco Standard Time",
        "UTC",
        "GMT Standard Time",
        "Greenwich Standard Time",
        "W. Europe Standard Time",
        "Central Europe Standard Time",
        "Romance Standard Time",
        "Central European Standard Time",
        "W. Central Africa Standard Time",
        "Namibia Standard Time",
        "Jordan Standard Time",
        "GTB Standard Time",
        "Middle East Standard Time",
        "Egypt Standard Time",
        "Syria Standard Time",
        "E. Europe Standard Time",
        "South Africa Standard Time",
        "FLE Standard Time",
        "Turkey Standard Time",
        "Israel Standard Time",
        "Kaliningrad Standard Time",
        "Libya Standard Time",
        "Arabic Standard Time",
        "Arab Standard Time",
        "Belarus Standard Time",
        "Russian Standard Time",
        "E. Africa Standard Time",
        "Iran Standard Time",
        "Arabian Standard Time",
        "Azerbaijan Standard Time",
        "Russia Time Zone 3",
        "Mauritius Standard Time",
        "Georgian Standard Time",
        "Caucasus Standard Time",
        "Afghanistan Standard Time",
        "West Asia Standard Time",
        "Ekaterinburg Standard Time",
        "Pakistan Standard Time",
        "India Standard Time",
        "Sri Lanka Standard Time",
        "Nepal Standard Time",
        "Central Asia Standard Time",
        "Bangladesh Standard Time",
        "N. Central Asia Standard Time",
        "Myanmar Standard Time",
        "SE Asia Standard Time",
        "North Asia Standard Time",
        "China Standard Time",
        "North Asia East Standard Time",
        "Singapore Standard Time",
        "W. Australia Standard Time",
        "Taipei Standard Time",
        "Ulaanbaatar Standard Time",
        "Tokyo Standard Time",
        "Korea Standard Time",
        "Yakutsk Standard Time",
        "Cen. Australia Standard Time",
        "AUS Central Standard Time",
        "E. Australia Standard Time",
        "AUS Eastern Standard Time",
        "West Pacific Standard Time",
        "Tasmania Standard Time",
        "Magadan Standard Time",
        "Vladivostok Standard Time",
        "Russia Time Zone 10",
        "Central Pacific Standard Time",
        "Russia Time Zone 11",
        "New Zealand Standard Time",
        "UTC+12",
        "Fiji Standard Time",
        "Tonga Standard Time",
        "Samoa Standard Time",
        "Line Islands Standard Time"
      ]
    },
    "DCConfigArchiveFileName": {
      "type": "string"
    },
    "codeVersion": {
      "type": "string",
      "defaultValue": "master"
    }
  },

  "variables": {
    "VMBuildParams": {
      "params": [
        {
          "virtualMachineName": "contosodc1",
          "CustomIPAddress": "[variables('contosoDNSServerIP')]",
          "subnetRef": "[variables('subnetRef')[0]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2400",
          "sku": "2012-R2-Datacenter",
          "domainName": "contoso.local",
          "NetBiosDomainname": "contoso",
          "ForwarderIPaddress": "[variables('fabrikamDNSServerIP')]",
          "ForwarderDomain": "fabrikam.local",
          "user": "[parameters('AdminUserName')]",
          "url": "[concat(variables('sourceURI'),'/DSC/',parameters('DCConfigArchiveFileName'))]",
          "script": "[variables('DscConfigurationScript')]",
          "function": "[variables('DscConfigurationFunction')]",
          "CustomScriptURis": [
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomDCScriptScriptFileName'))]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/contoso-users.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/contoso-groups.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/contoso-managers.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/contoso-groups-members.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/contoso-fp-groups.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/DSInternals_v4.4.1.zip')]"
            
          ]

        },
        {
          "virtualMachineName": "fabrikamdc1",
          "CustomIPAddress": "[variables('fabrikamDNSServerIP')]",
          "subnetRef": "[variables('subnetRef')[1]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2500",
          "sku": "2016-Datacenter",
          "domainName": "fabrikam.local",
          "NetBiosDomainname": "fabrikam",
          "ForwarderIPaddress": "[variables('contosoDNSServerIP')]",
          "ForwarderDomain": "contoso.local",
          "user": "[parameters('AdminUserName')]",
          "url": "[concat(variables('sourceURI'),'/DSC/',parameters('DCConfigArchiveFileName'))]",
          "script": "[variables('DscConfigurationScript')]",
          "function": "[variables('DscConfigurationFunction')]",
          "CustomScriptURis": [
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomDCScriptScriptFileName'))]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/fabrikam-users.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/fabrikam-groups.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/fabrikam-managers.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/fabrikam-groups-members.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/fabrikam-fp-groups.csv')]"


          ]
        },
        {
          "virtualMachineName": "contosofs1",
          "subnetRef": "[variables('subnetRef')[0]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2401",
          "sku": "2016-Datacenter",
          "domainName": "contoso.local",
          "user": "[concat('contoso\\',parameters('AdminUserName'))]",
          "CustomScriptFileName": "[variables('CustomFSScriptScriptFileName')]",
          "CustomScriptURis": [
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomFSScriptScriptFileName'))]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/contoso-file-directory.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/contoso-file-permissions.csv')]"
          ]
        },
        {
          "virtualMachineName": "fabrikamfs1",
          "subnetRef": "[variables('subnetRef')[1]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2501",
          "sku": "2019-Datacenter", //2019-Datacenter-Core
          "domainName": "fabrikam.local",
          "user": "[concat('fabrikam\\',parameters('AdminUserName'))]",
          "CustomScriptFileName": "[variables('CustomFSScriptScriptFileName')]",
          "CustomScriptURis": [
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomFSScriptScriptFileName'))]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/fabrikam-file-directory.csv')]",
            "[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/fabrikam-file-permissions.csv')]"
          ]
        }

      ]
    },
    "NSGname": "ACLXRAY-NSG",
    "vnetSubnetName": [
      "contoso-Subnet",
      "fabrikam-Subnet"
    ],
    "VirtualNetworkIPPrefix": "10.1.0.0/16",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": [
      "[concat(variables('vnetId'), '/subnets/', variables('vnetSubnetName')[0])]",
      "[concat(variables('vnetId'), '/subnets/', variables('vnetSubnetName')[1])]"
    ],
    "VnetIpArray": "[split(variables('VirtualNetworkIPPrefix'),'.')]",
    "contosoSubnetIpPrefix": "[concat(variables('VnetIpArray')[0],'.',variables('VnetIpArray')[1],'.0.0/24')]",
    "fabrikamSubnetIpPrefix": "[concat(variables('VnetIpArray')[0],'.',variables('VnetIpArray')[1],'.1.0/24')]",
    "contosoSubnetIPArray": "[split(variables('contosoSubnetIpPrefix'),'.')]",
    "fabrikamSubnetIPArray": "[split(variables('fabrikamSubnetIpPrefix'),'.')]",
    "contosoDNSServerIP": "[concat(variables('contosoSubnetIPArray')[0],'.',variables('contosoSubnetIPArray')[1],'.',variables('contosoSubnetIPArray')[2],'.','4')]",
    "fabrikamDNSServerIP": "[concat(variables('fabrikamSubnetIPArray')[0],'.',variables('fabrikamSubnetIPArray')[1],'.',variables('fabrikamSubnetIPArray')[2],'.','4')]",
    "DscConfigurationScript": "DCConfig.ps1",
    "DscConfigurationFunction": "DcConfig",
    "CustomScriptScriptFolder": "CustomScripts",
    "CustomDCScriptScriptFileName": "create-usersGroupsACLs.ps1",
    "CustomFSScriptScriptFileName": "create-fileServerACLs.ps1",
    "identityName":"aclxrayLabId",
    "bootstrapRoleAssignmentId": "[guid(concat(resourceGroup().id, 'contributor'))]",
    "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "sourceURI" : "[concat('https://raw.githubusercontent.com/noendscripting/Labdeploy/',parameters('codeVersion'))]"

  },
  "resources": [
  //Public IP LOOP
    {
      "name": "[concat(variables('VMBuildParams').params[copyIndex()].virtualMachineName,'publicIP')]",
      "Type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIP-Loop"
      },
      "Properties": {
        "publicIpAllocationMethod": "Dynamic"

      },
      "copy": {
        "name": "PublicIPCopy",
        "count": "[length(variables('VMBuildParams').params)]"
      }
    },
    // NSG Contoso
    {
      "comments": "# NSG",
      "name": "[variables('NSGName')]",
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ACLXRAY-NSG"
      },
      "properties": {
        "securityRules": [
          {
            "name": "allow-rdp-in",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('currentPublicIP')]",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    // Create Managed Identity
      {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('identityName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "aclxrayID"
      }
    },
    //Assign Contributor Role to Managed Identity
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('bootstrapRoleAssignmentId')]",
      "tags":{
        "displayName":"AssignPremisions"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]",
        "scope": "[resourceGroup().id]",
        "principalType": "ServicePrincipal"
      }
    },
   // Run Script Deployment to set DNS
   
    
    //VNET Settings
    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2020-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGName'))]"
       
      ],
      "tags": {
        "displayName": "VNET"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VirtualNetworkIPPrefix')]"
          ]
        },
        "subnets": [

          {
            "name": "[variables('vnetSubnetName')[0]]",
            "properties": {
              "addressPrefix": "[variables('contosoSubnetIpPrefix')]",
              "networkSecurityGroup": {
                "id":"[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGname'))]"
              }
            }
          },
          {
            "name": "[variables('vnetSubnetName')[1]]",
            "properties": {
              "addressPrefix": "[variables('fabrikamSubnetIpPrefix')]",
              "networkSecurityGroup":  {
                "id":"[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGname'))]"
              }
            }

          }
        ]
      }
    } ,
    //Forest DC NIC LOOP
    {
      "name": "[concat(variables('VMBuildParams').params[copyIndex()].virtualMachineName,'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "PublicIPCopy",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "Forest DC NIC Loop"
      },
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('VMBuildParams').params[copyIndex()].subnetRef]"
              },
              "privateIPAllocationMethod": "Dynamic",
              //"privateIPAddress": "[variables('VMBuildParams').params[copyIndex()].CustomIPAddress]",
              "publicIPAddress": {
                "id":"[resourceId('Microsoft.Network/publicIpAddresses',concat(variables('VMBuildParams').params[copyIndex()].virtualMachineName,'publicIP'))]"
              }
            }
          }
        ]

      },
      "copy": {
        "name": "NICBuild",
        "count": 2
      }
    },

    //File Server NIC LOOP
    {
      "name": "[concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "PublicIPCopy",
        "DCDSCLoop"
      ],
      "tags": {
        "displayName": "File Server NIC Loop"
      },
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('VMBuildParams').params[add(copyIndex(),2)].subnetRef]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress":  {
                "id":"[resourceId('Microsoft.Network/publicIpAddresses',concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'publicIP'))]"
              }
            }
          }
        ] 

      },
      "copy": {
        "name": "FileServerNic",
        "count": 2
      }
    },
    //CONTOSOAD DC
    {
      "name": "[variables('VMBuildParams').params[0].virtualMachineName]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('VMBuildParams').params[0].virtualMachineName,'NIC'))]"
      ],
      "tags": {
        "displayName": "CONTOSOAD-DC"
      },
      "properties": {
        "osProfile": {
          "computerName": "[variables('VMBuildParams').params[0].virtualMachineName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('shutdownTimeZone')]",
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('VMBuildParams').params[0].vmSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('VMBuildParams').params[0].sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMBuildParams').params[0].virtualMachineName,'NIC'))]"
            }
          ]

        }

      },
      "resources": [
        
      ]
    },
    //FABRIKAMAD DC
    {
      "name": "[variables('VMBuildParams').params[1].virtualMachineName]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('VMBuildParams').params[1].virtualMachineName,'NIC'))]",
        "[resourceId('Microsoft.Compute/virtualMachines',variables('VMBuildParams').params[0].virtualMachineName)]"

      ],
      "tags": {
        "displayName": "FABRIKAMAD-DC"
      },
      "properties": {
        "osProfile": {
          "computerName": "[variables('VMBuildParams').params[1].virtualMachineName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('shutdownTimeZone')]",
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('VMBuildParams').params[1].vmSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('VMBuildParams').params[1].sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": [
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMBuildParams').params[1].virtualMachineName,'NIC'))]"
            }
          ]

        }

      },
      "resources": [
        
      ]
    },
    //Domain Controllers DCS loop
    {
          "name": "[concat(variables('VMBuildParams').params[copyIndex()].virtualMachineName,'/',variables('VMBuildParams').params[copyIndex()].NetBiosDomainname,'-DSC-ForestBuild')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "apiVersion": "2019-03-01",

          "location": "[resourceGroup().location]",
          "tags": {
            "DisplayName": "DC-DCS-Loop"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines',variables('VMBuildParams').params[copyIndex()].virtualMachineName)]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.26",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",

              "configuration": {
                "script": "[variables('VMBuildParams').params[copyIndex()].script]",
                "url": "[variables('VMBuildParams').params[copyIndex()].url]",
                "function": "[variables('VMBuildParams').params[copyIndex()].function]"

              },
              "configurationArguments": {
                "domainName": "[variables('VMBuildParams').params[copyIndex()].domainName]",
                "NetBiosDomainname": "[variables('VMBuildParams').params[copyIndex()].NetBiosDomainname]",
                "ForwarderIPaddress": "[variables('VMBuildParams').params[copyIndex()].ForwarderIPaddress]",
                "ForwarderDomain": "[variables('VMBuildParams').params[copyIndex()].ForwarderDomain]",
                "TimeZone": "[parameters('shutdownTimeZone')]"

              }
            },
            "protectedSettings": {
              "configurationArguments": {
                "DomainAdminCredentials": {
                  "UserName": "[variables('VMBuildParams').params[copyIndex()].user]",
                  "Password": "[parameters('AdminPassword')]"
                }
              }
            }
          },
           "copy": {
        "count": 2,
        "name": "DCDSCLoop"
      }
        },
    //File Server Loop
    {
      "name": "[variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'NIC'))]",
        "[resourceId('Microsoft.Resources/deploymentScripts','CustomDNS')]"

      ],
      "tags": {
        "displayName": "File Server Loop"
      },
      "properties": {
        "osProfile": {
          "computerName": "[variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('shutdownTimeZone')]",
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('VMBuildParams').params[add(copyIndex(),2)].vmSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('VMBuildParams').params[add(copyIndex(),2)].sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'NIC'))]"
            }
          ]

        }

      },
      "resources": [

      ],
      "copy": {
        "name": "MemberServer",
        "count": 2
      }
    },
    // File server custom script loop
    {
      "name": "[concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'/',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'-FS-CustomScript')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "DCCustomScript",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,concat('joindomain-',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName))]"
      ],
      "tags": {
        "displayName": "FSConfugScript"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('VMBuildParams').params[add(copyIndex(),2)].CustomScriptURis]",
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('CustomScriptScriptFolder'), '/', variables('CustomFSScriptScriptFileName'))]"
        }
      },
      "copy": {
        "count": 2,
        "name": "FSCustomScript"
      }
    },
    //Join Domain Loop
    {
      "comments": "Join domain - JsonADDomainExtension",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'/joindomain-',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName)]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "MemberServer",
        "DCCustomScript"
        
      ],
      "tags": {
        "displayName": "joinDomain"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "autoUpgradeMinorVersion": true,
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "settings": {
          "Name": "[variables('VMBuildParams').params[add(copyIndex(),2)].domainName]",
          "User": "[variables('VMBuildParams').params[add(copyIndex(),2)].user]",
          "Restart": "true",
          "Options": 3
        },
        "protectedsettings": {
          "Password": "[parameters('AdminPassword')]"
        }
      },
      "copy": {
        "name": "joindomain",
        "count": 2
      }
    },

    // DC Import Custom Script
    {
      "name": "[concat(variables('VMBuildParams').params[copyIndex()].virtualMachineName,'/',variables('VMBuildParams').params[copyIndex()].NetBiosDomainname,'-DC-ImportScript')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "DCDSCLoop"
      ],
      "tags": {
        "displayName": "DCImportScript"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('VMBuildParams').params[copyIndex()].CustomScriptURis]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', '/', variables('CustomDCScriptScriptFileName'),' ',parameters('adminUsername'),' ',parameters('adminPassword'))]"
        }
      },
      "copy": {
        "count": 2,
        "name": "DCCustomScript"
      }
    },
    //Shutdown Schedule
    {
      "apiVersion": "2018-09-15",
      "Type": "Microsoft.DevTestLab/schedules",
      "name": "[concat('shutdown-computevm-',variables('VMBuildParams').params[copyIndex()].virtualMachineName)]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "joindomain"
      ],
      "tags": {
        "displayName": "VMShutdown-Schedule"
      },
      "properties": {
        "status": "Enabled",
        "timeZoneId": "[parameters('shutdownTimeZone')]",
        "taskType": "ComputeVmShutdownTask",
        "notificationSettings": {
          "status": "Disabled",
          "timeInMinutes": 15,
          "webhookUrl": null
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('VMBuildParams').params[copyIndex()].virtualMachineName)]",
        "dailyRecurrence": {
          "time": "[parameters('shutdownTime')]"
        }
      },
      "copy": {
        "name": "scheduleCopy",
        "count": "[length(variables('VMBuildParams').params)]"
      }

    },
  //Setting DNS on the VNET
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "CustomDNS",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('bootstrapRoleAssignmentId'))]",
         "DCDSCLoop"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
        }
      },
      
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "5.0",
        "timeout": "PT30M",
        "arguments": "[format(' -resourceGroup {0} -vnetName {1} -dc1 {2} -dc2 {3}', resourceGroup().name, parameters('virtualNetworkName'),variables('VMBuildParams').params[0].virtualMachineName,variables('VMBuildParams').params[1].virtualMachineName)]", // can pass an arguement string, double quotes must be escaped
        "primaryScriptUri":"[concat(variables('sourceURI'),'/', variables('CustomScriptScriptFolder'), '/set-customdns.ps1')]",
        "cleanupPreference": "Always",
        "retentionInterval": "P1D"
      }
    }
    
  ],
  "outputs": {

  }
}
