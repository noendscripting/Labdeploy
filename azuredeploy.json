{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "groot"
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "VNET02"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Microsoftie99999"
    },
    "publicIpAddressType": {
      "type": "string",
      "defaultValue": "Dynamic"
    },
    "shutDownTime": {
      "type": "string",
      "defaultValue": "23:00"
    },
    "shutdownTimeZone": {
      "type": "string",
      "allowedValues": [
        "Dateline Standard Time",
        "UTC-11",
        "Hawaiian Standard Time",
        "Alaskan Standard Time",
        "Pacific Standard Time (Mexico)",
        "Pacific Standard Time",
        "US Mountain Standard Time",
        "Mountain Standard Time (Mexico)",
        "Mountain Standard Time",
        "Central America Standard Time",
        "Central Standard Time",
        "Central Standard Time (Mexico)",
        "Canada Central Standard Time",
        "SA Pacific Standard Time",
        "Eastern Standard Time (Mexico)",
        "Eastern Standard Time",
        "US Eastern Standard Time",
        "Venezuela Standard Time",
        "Paraguay Standard Time",
        "Atlantic Standard Time",
        "Central Brazilian Standard Time",
        "SA Western Standard Time",
        "Newfoundland Standard Time",
        "E. South America Standard Time",
        "SA Eastern Standard Time",
        "Argentina Standard Time",
        "Greenland Standard Time",
        "Montevideo Standard Time",
        "Bahia Standard Time",
        "Pacific SA Standard Time",
        "UTC-02",
        "Azores Standard Time",
        "Cape Verde Standard Time",
        "Morocco Standard Time",
        "UTC",
        "GMT Standard Time",
        "Greenwich Standard Time",
        "W. Europe Standard Time",
        "Central Europe Standard Time",
        "Romance Standard Time",
        "Central European Standard Time",
        "W. Central Africa Standard Time",
        "Namibia Standard Time",
        "Jordan Standard Time",
        "GTB Standard Time",
        "Middle East Standard Time",
        "Egypt Standard Time",
        "Syria Standard Time",
        "E. Europe Standard Time",
        "South Africa Standard Time",
        "FLE Standard Time",
        "Turkey Standard Time",
        "Israel Standard Time",
        "Kaliningrad Standard Time",
        "Libya Standard Time",
        "Arabic Standard Time",
        "Arab Standard Time",
        "Belarus Standard Time",
        "Russian Standard Time",
        "E. Africa Standard Time",
        "Iran Standard Time",
        "Arabian Standard Time",
        "Azerbaijan Standard Time",
        "Russia Time Zone 3",
        "Mauritius Standard Time",
        "Georgian Standard Time",
        "Caucasus Standard Time",
        "Afghanistan Standard Time",
        "West Asia Standard Time",
        "Ekaterinburg Standard Time",
        "Pakistan Standard Time",
        "India Standard Time",
        "Sri Lanka Standard Time",
        "Nepal Standard Time",
        "Central Asia Standard Time",
        "Bangladesh Standard Time",
        "N. Central Asia Standard Time",
        "Myanmar Standard Time",
        "SE Asia Standard Time",
        "North Asia Standard Time",
        "China Standard Time",
        "North Asia East Standard Time",
        "Singapore Standard Time",
        "W. Australia Standard Time",
        "Taipei Standard Time",
        "Ulaanbaatar Standard Time",
        "Tokyo Standard Time",
        "Korea Standard Time",
        "Yakutsk Standard Time",
        "Cen. Australia Standard Time",
        "AUS Central Standard Time",
        "E. Australia Standard Time",
        "AUS Eastern Standard Time",
        "West Pacific Standard Time",
        "Tasmania Standard Time",
        "Magadan Standard Time",
        "Vladivostok Standard Time",
        "Russia Time Zone 10",
        "Central Pacific Standard Time",
        "Russia Time Zone 11",
        "New Zealand Standard Time",
        "UTC+12",
        "Fiji Standard Time",
        "Tonga Standard Time",
        "Samoa Standard Time",
        "Line Islands Standard Time"
      ]
    },

    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    },
    "DCConfigArchiveFileName": {
      "type": "string"
    },
    "dnsName": {
      "type": "string"
    }
  },

  "variables": {
    "VMBuildParams": {
      "params": [
        {
          "virtualMachineName": "contosodc1",
          "CustomIPAddress": "[variables('contosoDNSServerIP')]",
          "subnetRef": "[variables('subnetRef')[0]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2400",
          "sku": "2012-R2-Datacenter",
          "domainName": "contosoad.com",
          "NetBiosDomainname": "contosoad",
          "ForwarderIPaddress": "[variables('fabrikamDNSServerIP')]",
          "ForwarderDomain": "fabrikamad.com",
          "user": "[parameters('AdminUserName')]",
          "url": "[concat(parameters('_artifactsLocation'),'/',parameters('DCConfigArchiveFileName'))]",
          "script": "[variables('DscConfigurationScript')]",
          "function": "[variables('DscConfigurationFunction')]",
          "CustomScriptURis": [
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomDCScriptScriptFileName'), parameters('_artifactsLocationSasToken'))]",
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomScriptScriptContent')[0], parameters('_artifactsLocationSasToken'))]",
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomScriptScriptContent')[1], parameters('_artifactsLocationSasToken'))]",
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomScriptScriptContent')[2], parameters('_artifactsLocationSasToken'))]"
          ]

        },
        {
          "virtualMachineName": "fabrikamdc1",
          "CustomIPAddress": "[variables('fabrikamDNSServerIP')]",
          "subnetRef": "[variables('subnetRef')[1]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2500",
          "sku": "2012-R2-Datacenter",
          "domainName": "fabrikamad.com",
          "NetBiosDomainname": "fabrikamad",
          "ForwarderIPaddress": "[variables('contosoDNSServerIP')]",
          "ForwarderDomain": "contosoad.com",
          "user": "[parameters('AdminUserName')]",
          "url": "[concat(parameters('_artifactsLocation'),'/',parameters('DCConfigArchiveFileName'))]",
          "script": "[variables('DscConfigurationScript')]",
          "function": "[variables('DscConfigurationFunction')]",
          "CustomScriptURis": [
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomDCScriptScriptFileName'), parameters('_artifactsLocationSasToken'))]",
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomScriptScriptContent')[1], parameters('_artifactsLocationSasToken'))]"


          ]
        },
        {
          "virtualMachineName": "contosofs1",
          "subnetRef": "[variables('subnetRef')[0]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2401",
          "sku": "2016-Datacenter",
          "domainName": "contosoad.com",
          "user": "[concat('contosoad\\',parameters('AdminUserName'))]",
          "CustomScriptFileName": "[variables('CustomFSScriptScriptFileName')]",
          "CustomScriptURis": [
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomFSScriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
          ]
        },
        {
          "virtualMachineName": "fabrikamfs1",
          "subnetRef": "[variables('subnetRef')[1]]",
          "vmSize": "[parameters('virtualMachineSize')]",
          "inboundRDP": "2501",
          "sku": "2019-Datacenter",
          "domainName": "fabrikamad.com",
          "user": "[concat('fabrikamad\\',parameters('AdminUserName'))]",
          "CustomScriptFileName": "[variables('CustomFSScriptScriptFileName')]",
          "CustomScriptURis": [
            "[concat(parameters('_artifactsLocation'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomFSScriptScriptFileName'), parameters('_artifactsLocationSasToken'))]"
          ]
        }

      ]
    },
    "NSGname": "ACLXRAY-NSG",
    "availabilitySetname": "aclxraySet",
    "vnetSubnetName": [
      "contoso-Subnet",
      "fabrikam-Subnet"
    ],
    "VirtualNetworkIPPrefix": "10.1.0.0/16",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": [
      "[concat(variables('vnetId'), '/subnets/', variables('vnetSubnetName')[0])]",
      "[concat(variables('vnetId'), '/subnets/', variables('vnetSubnetName')[1])]"
    ],
    "publicIPName": [
      "[concat(variables('VMBuildParams').params[0].virtualMachineName,'PUBLICIP')]",
      "[concat(variables('VMBuildParams').params[1].virtualMachineName,'PUBLICIP')]",
      "[concat(variables('VMBuildParams').params[2].virtualMachineName,'PUBLICIP')]",
      "[concat(variables('VMBuildParams').params[3].virtualMachineName,'PUBLICIP')]"

    ],
    "privateNICName": [
      "[concat(variables('VMBuildParams').params[0].virtualMachineName,'NIC')]",
      "[concat(variables('VMBuildParams').params[1].virtualMachineName,'NIC')]",
      "[concat(variables('VMBuildParams').params[2].virtualMachineName,'NIC')]",
      "[concat(variables('VMBuildParams').params[3].virtualMachineName,'NIC')]"

    ],
    "VnetIpArray": "[split(variables('VirtualNetworkIPPrefix'),'.')]",
    "contosoSubnetIpPrefix": "[concat(variables('VnetIpArray')[0],'.',variables('VnetIpArray')[1],'.0.0/24')]",
    "fabrikamSubnetIpPrefix": "[concat(variables('VnetIpArray')[0],'.',variables('VnetIpArray')[1],'.1.0/24')]",
    "contosoSubnetIPArray": "[split(variables('contosoSubnetIpPrefix'),'.')]",
    "fabrikamSubnetIPArray": "[split(variables('fabrikamSubnetIpPrefix'),'.')]",
    "contosoDNSServerIP": "[concat(variables('contosoSubnetIPArray')[0],'.',variables('contosoSubnetIPArray')[1],'.',variables('contosoSubnetIPArray')[2],'.','4')]",
    "fabrikamDNSServerIP": "[concat(variables('fabrikamSubnetIPArray')[0],'.',variables('fabrikamSubnetIPArray')[1],'.',variables('fabrikamSubnetIPArray')[2],'.','4')]",
    "DscConfigurationScript": "DCConfig.ps1",
    "DscConfigurationFunction": "DcConfig",
    "CustomScriptScriptFolder": "CustomScripts",
    "CustomDCScriptScriptFileName": "create-usersGroupsACLs.ps1",
    "CustomFSScriptScriptFileName": "create-fileServerACLs.ps1",
    "CustomScriptScriptContent": [
      "contosoad-users.csv",
      "fabrikamad-users.csv",
      "DSInternals_v4.4.1.zip"
    ],
    "loadBalancername": "aclxrayLabLB",
    "loadBalancerPublicIpName": "aclxraylabLBPIP"

  },
  "resources": [

    // NSG Contoso
    {
      "comments": "# NSG",
      "name": "[variables('NSGName')]",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "ACLXRAY-NSG"
      },
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp-in",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-in-vnet-only",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 1600,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-out-vnet-only",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 1700,
              "direction": "Outbound"
            }
          },
          {
            "name": "allow-out-443-internet",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 1800,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    
    // Availability Set
    {
      "name": "[variables('availabilitySetname')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "DisplayName": "Avaialability Set"
      },
      "properties": {
        "platformUpdateDomainCount": 2,
        "platformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    //Public IP for Load blancer
    {
      "name": "[variables('loadBalancerPublicIpName')]",
      "Type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PublicIP-LoadBalancer"
      },
      "Properties": {
        "publicIpAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsName')]"
        }
      }
    },
    // Loadbalancer for NAT
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2020-05-01",
      "name": "[variables('loadBalancername')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIpAddresses', variables('loadBalancerPublicIpName'))]"
      ],
      "tags": {
        "DisplayName": "LoadBalancer"
      },
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('loadBalancerPublicIpName'))]"
              },
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "backendAddressPools": [],
        "loadBalancingRules": [],
        "probes": [],
        "inboundNatRules": [

        ],
        "inboundNatPools": []
      }
    },
    // Load Balancer inbound NAT Loop
    {
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "apiVersion": "2020-05-01",
      "name": "[concat(variables('loadBalancername'), '/',variables('VMBuildParams').params[copyIndex()].virtualMachineName)]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancername'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancername')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
        },
        "frontendPort": "[variables('VMBuildParams').params[copyIndex()].inboundRDP]",
        "backendPort": 3389,
        "enableFloatingIP": false,
        "idleTimeoutInMinutes": 10,
        "protocol": "Tcp",
        "enableTcpReset": false
      },
      "copy": {
        "count": "[length(variables('VMBuildParams').params)]",
        "name": "inboundNatLoop"
      }
    },
    
    //VNET Settings
    {
      "name": "[parameters('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGName'))]"
       
      ],
      "tags": {
        "displayName": "VNET"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VirtualNetworkIPPrefix')]"
          ]
        },
        "subnets": [

          {
            "name": "[variables('vnetSubnetName')[0]]",
            "properties": {
              "addressPrefix": "[variables('contosoSubnetIpPrefix')]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGName'))]"
            }
          },
          {
            "name": "[variables('vnetSubnetName')[1]]",
            "properties": {
              "addressPrefix": "[variables('fabrikamSubnetIpPrefix')]"
            },
            "networkSecurityGroup": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSGName'))]"
            }

          }
        ]
      }
    },
    //Forest DC NIC LOOP
    {
      "name": "[variables('privateNICName')[copyIndex()]]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "inboundNatLoop",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "Forest DC NIC Loop"
      },
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('VMBuildParams').params[copyIndex()].subnetRef]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('VMBuildParams').params[copyIndex()].CustomIPAddress]",
              "loadBalancerInboundNatRules": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules',variables('loadBalancername'),variables('VMBuildParams').params[copyIndex()].virtualMachineName)]"
                }
              ]
            }
          }
        ]

      },
      "copy": {
        "name": "ForestBuild",
        "count": 2
      }
    },

    //File Server NIC LOOP
    {
      "name": "[variables('privateNICName')[add(copyIndex(),2)]]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "inboundNatLoop",
        "ForestBuild",
        "[concat('Microsoft.Resources/deployments/','set-VNET-DNS')]"
      ],
      "tags": {
        "displayName": "File Server NIC Loop"
      },
      "properties": {
        "primary": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('VMBuildParams').params[add(copyIndex(),2)].subnetRef]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "loadBalancerInboundNatRules": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules',variables('loadBalancername'),variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName)]"
                }
              ]
            }
          }
        ] 

      },
      "copy": {
        "name": "FileServerNic",
        "count": 2
      }
    },
    //CONTOSOAD DC
    {
      "name": "[variables('VMBuildParams').params[0].virtualMachineName]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',variables('privateNICName')[0])]",
        "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
      ],
      "tags": {
        "displayName": "CONTOSOAD-DC"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[variables('VMBuildParams').params[0].virtualMachineName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('shutdownTimeZone')]",
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('VMBuildParams').params[0].vmSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('VMBuildParams').params[0].sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('privateNICName')[0])]"
            }
          ]

        }

      },
      "resources": [
        {
          "name": "[concat(variables('VMBuildParams').params[0].NetBiosDomainname,'-DCConfig')]",
          "type": "extensions",
          "apiVersion": "2019-03-01",

          "location": "[resourceGroup().location]",
          "tags": {
            "DisplayName": "ContosoDCSextensions"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines',variables('VMBuildParams').params[0].virtualMachineName)]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.26",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",

              "configuration": {
                "script": "[variables('VMBuildParams').params[0].script]",
                "url": "[variables('VMBuildParams').params[0].url]",
                "function": "[variables('VMBuildParams').params[0].function]"

              },
              "configurationArguments": {
                "domainName": "[variables('VMBuildParams').params[0].domainName]",
                "NetBiosDomainname": "[variables('VMBuildParams').params[0].NetBiosDomainname]",
                "ForwarderIPaddress": "[variables('VMBuildParams').params[0].ForwarderIPaddress]",
                "ForwarderDomain": "[variables('VMBuildParams').params[0].ForwarderDomain]",
                "TimeZone": "[parameters('shutdownTimeZone')]"

              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "DomainAdminCredentials": {
                  "UserName": "[variables('VMBuildParams').params[0].user]",
                  "Password": "[parameters('AdminPassword')]"
                }
              }
            }
          }
        }

      ]
    },
    //FABRIKAMAD DC
    {
      "name": "[variables('VMBuildParams').params[1].virtualMachineName]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',variables('privateNICName')[1])]",
        "[resourceId('Microsoft.Compute/virtualMachines',variables('VMBuildParams').params[0].virtualMachineName)]",
        "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"

      ],
      "tags": {
        "displayName": "FABRIKAMAD-DC"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[variables('VMBuildParams').params[1].virtualMachineName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('shutdownTimeZone')]",
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('VMBuildParams').params[1].vmSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('VMBuildParams').params[1].sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": [
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('privateNICName')[1])]"
            }
          ]

        }

      },
      "resources": [
        {
          "name": "[concat(variables('VMBuildParams').params[1].NetBiosDomainname,'-DCConfig')]",
          "type": "extensions",
          "apiVersion": "2019-03-01",

          "location": "[resourceGroup().location]",
          "tags": {
            "DisplayName": "FabrikamDCSextensions"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines',variables('VMBuildParams').params[1].virtualMachineName)]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.26",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "latest",

              "configuration": {
                "script": "[variables('VMBuildParams').params[1].script]",
                "url": "[variables('VMBuildParams').params[1].url]",
                "function": "[variables('VMBuildParams').params[1].function]"

              },
              "configurationArguments": {
                "domainName": "[variables('VMBuildParams').params[1].domainName]",
                "NetBiosDomainname": "[variables('VMBuildParams').params[1].NetBiosDomainname]",
                "ForwarderIPaddress": "[variables('VMBuildParams').params[1].ForwarderIPaddress]",
                "ForwarderDomain": "[variables('VMBuildParams').params[1].ForwarderDomain]",
                "TimeZone": "[parameters('shutdownTimeZone')]"

              }
            },
            "protectedSettings": {
              "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationArguments": {
                "DomainAdminCredentials": {
                  "UserName": "[variables('VMBuildParams').params[1].user]",
                  "Password": "[parameters('AdminPassword')]"
                }
              }
            }
          }
        }

      ]
    },
    //File Server Loop
    {
      "name": "[variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',variables('privateNICName')[add(copyIndex(),2)])]",
        "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"

      ],
      "tags": {
        "displayName": "File Server Loop"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('shutdownTimeZone')]",
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('VMBuildParams').params[add(copyIndex(),2)].vmSize]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[variables('VMBuildParams').params[add(copyIndex(),2)].sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('privateNICName')[add(copyIndex(),2)])]"
            }
          ]

        }

      },
      "resources": [

      ],
      "copy": {
        "name": "MemberServer",
        "count": 2
      }
    },
    // File server custom script loop
    {
      "name": "[concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'/',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'-FSCustomScript')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "DCCustomScript",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,concat('joindomain-',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName))]"
      ],
      "tags": {
        "displayName": "FSConfugScript"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('VMBuildParams').params[add(copyIndex(),2)].CustomScriptURis]",
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('CustomScriptScriptFolder'), '/', variables('CustomFSScriptScriptFileName'))]"
        }
      },
      "copy": {
        "count": 2,
        "name": "FSCustomScript"
      }
    },
    //Join Domain Loop
    {
      "comments": "Join domain - JsonADDomainExtension",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName,'/joindomain-',variables('VMBuildParams').params[add(copyIndex(),2)].virtualMachineName)]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "MemberServer",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('VMBuildParams').params[0].virtualMachineName,concat(variables('VMBuildParams').params[0].NetBiosDomainname,'-DCConfig'))]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('VMBuildParams').params[1].virtualMachineName,concat(variables('VMBuildParams').params[1].NetBiosDomainname,'-DCConfig'))]"
      ],
      "tags": {
        "displayName": "joinDomain"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "autoUpgradeMinorVersion": true,
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "settings": {
          "Name": "[variables('VMBuildParams').params[add(copyIndex(),2)].domainName]",
          "User": "[variables('VMBuildParams').params[add(copyIndex(),2)].user]",
          "Restart": "true",
          "Options": 3
        },
        "protectedsettings": {
          "Password": "[parameters('AdminPassword')]"
        }
      },
      "copy": {
        "name": "joindomain",
        "count": 2
      }
    },

    // DC Import Custom Script
    {
      "name": "[concat(variables('VMBuildParams').params[copyIndex()].virtualMachineName,'/',variables('VMBuildParams').params[copyIndex()].NetBiosDomainname,'-DCImportScript')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('VMBuildParams').params[copyIndex()].virtualMachineName,concat(variables('VMBuildParams').params[copyIndex()].NetBiosDomainname,'-DCConfig'))]"

      ],
      "tags": {
        "displayName": "DCImportScript"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('VMBuildParams').params[copyIndex()].CustomScriptURis]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('CustomScriptScriptFolder'), '/', variables('CustomDCScriptScriptFileName'),' ',parameters('adminUsername'),' ',parameters('adminPassword'))]"
        }
      },
      "copy": {
        "count": 2,
        "name": "DCCustomScript"
      }
    },
    //Shutdown Schedule
    {
      "apiVersion": "2018-09-15",
      "Type": "Microsoft.DevTestLab/schedules",
      "name": "[concat('shutdown-computevm-',variables('VMBuildParams').params[copyIndex()].virtualMachineName)]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "joindomain"
      ],
      "tags": {
        "displayName": "VMShutdown-Schedule"
      },
      "properties": {
        "status": "Enabled",
        "timeZoneId": "[parameters('shutdownTimeZone')]",
        "taskType": "ComputeVmShutdownTask",
        "notificationSettings": {
          "status": "Disabled",
          "timeInMinutes": 15,
          "webhookUrl": null
        },
        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('VMBuildParams').params[copyIndex()].virtualMachineName)]",
        "dailyRecurrence": {
          "time": "[parameters('shutdownTime')]"
        }
      },
      "copy": {
        "name": "scheduleCopy",
        "count": "[length(variables('VMBuildParams').params)]"
      }

    },
    //Setting DNS on the VNET
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "set-VNET-DNS",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',variables('VMBuildParams').params[1].virtualMachineName,concat(variables('VMBuildParams').params[1].NetBiosDomainname,'-DCConfig'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "name": "[parameters('virtualNetworkName')]",
              "type": "Microsoft.Network/virtualNetworks",
              "location": "[resourceGroup().location]",
              "apiVersion": "2018-08-01",
              "tags": { "DisplayName": "VNET" },
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('VirtualNetworkIPPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('vnetSubnetName')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('contosoSubnetIpPrefix')]"
                    }
                  },
                  {
                    "name": "[variables('vnetSubnetName')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('fabrikamSubnetIpPrefix')]"
                    }

                  }
                ],
                "dhcpOptions": {
                  "dnsServers": [
                    "[concat(variables('contosoSubnetIPArray')[0],'.',variables('contosoSubnetIPArray')[1],'.',variables('contosoSubnetIPArray')[2],'.','4')]",
                    //"[concat(variables('contosoSubnetIPArray')[0],'.',variables('contosoSubnetIPArray')[1],'.',variables('contosoSubnetIPArray')[2],'.','5')]",
                    "[concat(variables('fabrikamSubnetIPArray')[0],'.',variables('fabrikamSubnetIPArray')[1],'.',variables('fabrikamSubnetIPArray')[2],'.','4')]"
                  ]
                }
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "rdpDNS": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('loadBalancerPublicIpName'))).dnsSettings.fqdn]"
    }

  }
}
